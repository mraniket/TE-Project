<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Participate_individual extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Participate_individual_model');
        $this->load->library('session');
    } 

    /*
     * Listing of participate_individual
     */
     function KeyWords()
    {
        $key = $this->input->post('game_name');
        $data['participate_individual'] = $this->Participate_individual_model->search($key);
        $this->load->view('keyview', $data);
     }

       function club_permission()
    {
        $student_id = $this->session->userdata('student_id');
        if ($student_id == NULL) {
            return FALSE;
        }
        else {
            return TRUE;
        }
    }

    function index()
    {
        
        $data['participate_individual'] = $this->Participate_individual_model->get_all_participate_individual();
        
        $data['_view'] = 'participate_individual/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new participate_individual
     */
    function add()
    {   
         if ($this->club_permission() == FALSE) {
            redirect('student/login', 'refresh');
        }
        else
        {
        $this->load->library('form_validation');

		$this->form_validation->set_rules('name','name','required');
        $this->form_validation->set_rules('lname','lname','required');
		$this->form_validation->set_rules('email_id','Email Id','valid_email|required');
		$this->form_validation->set_rules('mobile_no','Mobile No','required');
		$this->form_validation->set_rules('class','Class','required');
		$this->form_validation->set_rules('department','Department','required');
		$this->form_validation->set_rules('game_name','Game Name','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'name' => $this->input->post('name'),
                'name' => $this->input->post('lname'),
				'department' => $this->input->post('department'),
				'email_id' => $this->input->post('email_id'),
				'mobile_no' => $this->input->post('mobile_no'),
				'class' => $this->input->post('class'),
				'game_name' => $this->input->post('game_name'),
            );
            
            $participate_individual_id = $this->Participate_individual_model->add_participate_individual($params);
            redirect('student/index');
        }
        else
        {
			$this->load->model('Student_registartion_model');
			$data['all_student_registartion'] = $this->Student_registartion_model->get_all_student_registartion();
             $student_id = $this->session->userdata('student_id');
            $data['student_registartion'] = $this->Student_registartion_model->get_student_registartion($student_id);
			$this->load->model('Department_model');
			$data['all_department'] = $this->Department_model->get_all_department();
            
            /*$data['_view'] = 'participate_individual/add';*/
            $this->load->view('participate_individual/add',$data);
        }
    }  
}
    /*
     * Editing a participate_individual
     */
    function edit($id)
    {   
        // check if the participate_individual exists before trying to edit it
        $data['participate_individual'] = $this->Participate_individual_model->get_participate_individual($id);
        
        if(isset($data['participate_individual']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('registration_id','Registration Id','required');
			$this->form_validation->set_rules('email_id','Email Id','valid_email|required');
			$this->form_validation->set_rules('mobile_no','Mobile No','required');
			$this->form_validation->set_rules('class','Class','required');
			$this->form_validation->set_rules('department','Department','required');
			$this->form_validation->set_rules('game_name','Game Name','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'id' => $this->input->post('registration_id'),
					'department' => $this->input->post('department'),
					'email_id' => $this->input->post('email_id'),
					'mobile_no' => $this->input->post('mobile_no'),
					'class' => $this->input->post('class'),
					'game_name' => $this->input->post('game_name'),
                );

                $this->Participate_individual_model->update_participate_individual($id,$params);            
                redirect('participate_individual/index');
            }
            else
            {
				$this->load->model('Student_registartion_model');
				$data['all_student_registartion'] = $this->Student_registartion_model->get_all_student_registartion();

				$this->load->model('Department_model');
				$data['all_department'] = $this->Department_model->get_all_department();

                $data['_view'] = 'participate_individual/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The participate_individual you are trying to edit does not exist.');
    } 

    /*
     * Deleting participate_individual
     */
    function remove($id)
    {
        $participate_individual = $this->Participate_individual_model->get_participate_individual($id);

        // check if the participate_individual exists before trying to delete it
        if(isset($participate_individual['id']))
        {
            $this->Participate_individual_model->delete_participate_individual($id);
            redirect('participate_individual/index');
        }
        else
            show_error('The participate_individual you are trying to delete does not exist.');
    }
    
}
