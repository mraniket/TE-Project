<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Admin_registration extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Admin_registration_model');
        $this->load->library('session');
    } 

    /*
     * Listing of admin_registration
     */
    function index()
    {
        $data['admin_registration'] = $this->Admin_registration_model->get_all_admin_registration();
        
        $data['_view'] = 'admin_registration/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new admin_registration
     */
    function admin_permission()
    {
        $admin_id = $this->session->userdata('admin_id');
        if ($admin_id == NULL) {
            return FALSE;
        }
        else {
            return TRUE;
        }
    }

    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('email_id','Email Id','required');
		$this->form_validation->set_rules('mobile_no','Mobile No','required');
		$this->form_validation->set_rules('password','Password','required');
		$this->form_validation->set_rules('name','Name','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'password' => $this->input->post('password'),
				'name' => $this->input->post('name'),
				'email_id' => $this->input->post('email_id'),
				'mobile_no' => $this->input->post('mobile_no'),
            );
            
            $admin_registration_id = $this->Admin_registration_model->add_admin_registration($params);
            redirect('admin_registration/index');
        }
        else
        {            
            $data['_view'] = 'admin_registration/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a admin_registration
     */
    function edit()
    {  
        if ($this->admin_permission() == TRUE) {
            redirect('Dashboard/', 'refresh');
        }
        else
        { 
            $admin_id = $this->session->userdata('admin_id');
        // check if the admin_registration exists before trying to edit it
        $data['admin_registration'] = $this->Admin_registration_model->get_admin_registration($admin_id);
        
        if(isset($data['admin_registration']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('email_id','Email Id','required');
			$this->form_validation->set_rules('mobile_no','Mobile No','required');
			$this->form_validation->set_rules('password','Password','required');
			$this->form_validation->set_rules('name','Name','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'password' => $this->input->post('password'),
					'name' => $this->input->post('name'),
					'email_id' => $this->input->post('email_id'),
					'mobile_no' => $this->input->post('mobile_no'),
                );

                $this->Admin_registration_model->update_admin_registration($admin_id,$params);            
                redirect('admin_registration/index');
            }
            else
            {
                $data['_view'] = 'admin_registration/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The admin_registration you are trying to edit does not exist.');
    } 
}

    /*
     * Deleting admin_registration
     */
    function remove($id)
    {
        $admin_registration = $this->Admin_registration_model->get_admin_registration($id);

        // check if the admin_registration exists before trying to delete it
        if(isset($admin_registration['id']))
        {
            $this->Admin_registration_model->delete_admin_registration($id);
            redirect('admin_registration/index');
        }
        else
            show_error('The admin_registration you are trying to delete does not exist.');
    }
    
}
